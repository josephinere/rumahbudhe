// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Employee {
  id String @id @default(cuid())
  name String
  email String
  phone String
  shift String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu{
  id String   @id @default(cuid())
  nama String
  harga Float
  keterangan String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Lemenu {
  id          String    @id @default(cuid())
  nama        String
  harga       Float
  keterangan  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  detail      Detail[]  // Relasi dengan transaksi detail
}

model Transaksi {
  id                String   @id @default(cuid())
  totalHarga        Float
  jumlah            Float
  catatan           String   @db.VarChar(250)
  metodeBayar       String   @db.VarChar(100)
  tanggal           DateTime @default(now())

  transaksiDetail   Detail[]  // Relasi dengan detail transaksi
}

model Detail {
  id           String    @id @default(cuid())
  transaksiId  String
  menuId       String
  quantity     Int
  subtotal     Float

  transaksi    Transaksi @relation(fields: [transaksiId], references: [id])
  menu         Lemenu    @relation(fields: [menuId], references: [id])  // Menambahkan relasi ke Lemenu
}

model Kode {
  id         String   @id @default(cuid())
  nama       String
  klaim     Float
  expired   DateTime
}

model Stok {
  id String @id @default(cuid())
  nama  String
  jumlah      String
  harga       Float
}